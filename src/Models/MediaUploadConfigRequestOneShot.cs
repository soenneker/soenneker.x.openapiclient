// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MediaUploadConfigRequestOneShot : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The additional_owners property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AdditionalOwners { get; set; }
#nullable restore
#else
        public List<string> AdditionalOwners { get; set; }
#endif
        /// <summary>A string enum value which identifies a media use-case. This identifier is used to enforce use-case specific constraints (e.g. file size, video duration) and enable advanced features.</summary>
        public global::Soenneker.X.OpenApiClient.Models.MediaCategory? MediaCategory { get; set; }
        /// <summary>The type of media.</summary>
        public global::Soenneker.X.OpenApiClient.Models.MediaUploadConfigRequestOneShot_media_type? MediaType { get; set; }
        /// <summary>Whether this media is shared or not.</summary>
        public bool? Shared { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.MediaUploadConfigRequestOneShot"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.MediaUploadConfigRequestOneShot CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.MediaUploadConfigRequestOneShot();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "additional_owners", n => { AdditionalOwners = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "media_category", n => { MediaCategory = n.GetEnumValue<global::Soenneker.X.OpenApiClient.Models.MediaCategory>(); } },
                { "media_type", n => { MediaType = n.GetEnumValue<global::Soenneker.X.OpenApiClient.Models.MediaUploadConfigRequestOneShot_media_type>(); } },
                { "shared", n => { Shared = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("additional_owners", AdditionalOwners);
            writer.WriteEnumValue<global::Soenneker.X.OpenApiClient.Models.MediaCategory>("media_category", MediaCategory);
            writer.WriteEnumValue<global::Soenneker.X.OpenApiClient.Models.MediaUploadConfigRequestOneShot_media_type>("media_type", MediaType);
            writer.WriteBoolValue("shared", Shared);
        }
    }
}
#pragma warning restore CS0618
