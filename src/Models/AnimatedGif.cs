// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AnimatedGif : global::Soenneker.X.OpenApiClient.Models.Media, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The preview_image_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreviewImageUrl { get; set; }
#nullable restore
#else
        public string PreviewImageUrl { get; set; }
#endif
        /// <summary>An array of all available variants of the media.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.X.OpenApiClient.Models.Variant>? Variants { get; set; }
#nullable restore
#else
        public List<global::Soenneker.X.OpenApiClient.Models.Variant> Variants { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.AnimatedGif"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Soenneker.X.OpenApiClient.Models.AnimatedGif CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.AnimatedGif();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "preview_image_url", n => { PreviewImageUrl = n.GetStringValue(); } },
                { "variants", n => { Variants = n.GetCollectionOfObjectValues<global::Soenneker.X.OpenApiClient.Models.Variant>(global::Soenneker.X.OpenApiClient.Models.Variant.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("preview_image_url", PreviewImageUrl);
            writer.WriteCollectionOfObjectValues<global::Soenneker.X.OpenApiClient.Models.Variant>("variants", Variants);
        }
    }
}
#pragma warning restore CS0618
