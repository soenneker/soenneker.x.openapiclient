// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    /// <summary>
    /// Represent the portion of text recognized as a URL, and its start and end position within the text.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UrlEntityDm : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Description of the URL landing page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The URL as displayed in the X client.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayUrl { get; set; }
#nullable restore
#else
        public string DisplayUrl { get; set; }
#endif
        /// <summary>Index (zero-based) at which position this entity ends.  The index is exclusive.</summary>
        public int? End { get; set; }
        /// <summary>A validly formatted URL.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpandedUrl { get; set; }
#nullable restore
#else
        public string ExpandedUrl { get; set; }
#endif
        /// <summary>The images property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.X.OpenApiClient.Models.UrlImage>? Images { get; set; }
#nullable restore
#else
        public List<global::Soenneker.X.OpenApiClient.Models.UrlImage> Images { get; set; }
#endif
        /// <summary>The Media Key identifier for this attachment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaKey { get; set; }
#nullable restore
#else
        public string MediaKey { get; set; }
#endif
        /// <summary>Index (zero-based) at which position this entity starts.  The index is inclusive.</summary>
        public int? Start { get; set; }
        /// <summary>HTTP Status Code.</summary>
        public int? Status { get; set; }
        /// <summary>Title of the page the URL points to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Fully resolved url.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnwoundUrl { get; set; }
#nullable restore
#else
        public string UnwoundUrl { get; set; }
#endif
        /// <summary>A validly formatted URL.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.X.OpenApiClient.Models.UrlEntityDm"/> and sets the default values.
        /// </summary>
        public UrlEntityDm()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.UrlEntityDm"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.UrlEntityDm CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.UrlEntityDm();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "display_url", n => { DisplayUrl = n.GetStringValue(); } },
                { "end", n => { End = n.GetIntValue(); } },
                { "expanded_url", n => { ExpandedUrl = n.GetStringValue(); } },
                { "images", n => { Images = n.GetCollectionOfObjectValues<global::Soenneker.X.OpenApiClient.Models.UrlImage>(global::Soenneker.X.OpenApiClient.Models.UrlImage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "media_key", n => { MediaKey = n.GetStringValue(); } },
                { "start", n => { Start = n.GetIntValue(); } },
                { "status", n => { Status = n.GetIntValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "unwound_url", n => { UnwoundUrl = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("display_url", DisplayUrl);
            writer.WriteIntValue("end", End);
            writer.WriteStringValue("expanded_url", ExpandedUrl);
            writer.WriteCollectionOfObjectValues<global::Soenneker.X.OpenApiClient.Models.UrlImage>("images", Images);
            writer.WriteStringValue("media_key", MediaKey);
            writer.WriteIntValue("start", Start);
            writer.WriteIntValue("status", Status);
            writer.WriteStringValue("title", Title);
            writer.WriteStringValue("unwound_url", UnwoundUrl);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
