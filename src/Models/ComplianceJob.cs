// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ComplianceJob : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Creation time of the compliance job.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Expiration time of the download URL.</summary>
        public DateTimeOffset? DownloadExpiresAt { get; set; }
        /// <summary>URL from which the user will retrieve their compliance results.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DownloadUrl { get; set; }
#nullable restore
#else
        public string DownloadUrl { get; set; }
#endif
        /// <summary>Compliance Job ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>User-provided name for a compliance job.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Status of a compliance job.</summary>
        public global::Soenneker.X.OpenApiClient.Models.ComplianceJobStatus? Status { get; set; }
        /// <summary>Type of compliance job to list.</summary>
        public global::Soenneker.X.OpenApiClient.Models.ComplianceJobType? Type { get; set; }
        /// <summary>Expiration time of the upload URL.</summary>
        public DateTimeOffset? UploadExpiresAt { get; set; }
        /// <summary>URL to which the user will upload their Tweet or user IDs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadUrl { get; set; }
#nullable restore
#else
        public string UploadUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.X.OpenApiClient.Models.ComplianceJob"/> and sets the default values.
        /// </summary>
        public ComplianceJob()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.ComplianceJob"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.ComplianceJob CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.ComplianceJob();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "download_expires_at", n => { DownloadExpiresAt = n.GetDateTimeOffsetValue(); } },
                { "download_url", n => { DownloadUrl = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.X.OpenApiClient.Models.ComplianceJobStatus>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.X.OpenApiClient.Models.ComplianceJobType>(); } },
                { "upload_expires_at", n => { UploadExpiresAt = n.GetDateTimeOffsetValue(); } },
                { "upload_url", n => { UploadUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteDateTimeOffsetValue("download_expires_at", DownloadExpiresAt);
            writer.WriteStringValue("download_url", DownloadUrl);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::Soenneker.X.OpenApiClient.Models.ComplianceJobStatus>("status", Status);
            writer.WriteEnumValue<global::Soenneker.X.OpenApiClient.Models.ComplianceJobType>("type", Type);
            writer.WriteDateTimeOffsetValue("upload_expires_at", UploadExpiresAt);
            writer.WriteStringValue("upload_url", UploadUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
