// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    /// <summary>
    /// Usage per client app
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Usage : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Number of days left for the Tweet cap to reset</summary>
        public int? CapResetDay { get; set; }
        /// <summary>The daily usage breakdown for each Client Application a project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.X.OpenApiClient.Models.ClientAppUsage>? DailyClientAppUsage { get; set; }
#nullable restore
#else
        public List<global::Soenneker.X.OpenApiClient.Models.ClientAppUsage> DailyClientAppUsage { get; set; }
#endif
        /// <summary>The daily usage breakdown for a project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.Usage_daily_project_usage? DailyProjectUsage { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.Usage_daily_project_usage DailyProjectUsage { get; set; }
#endif
        /// <summary>Total number of Posts that can be read in this project per month</summary>
        public int? ProjectCap { get; set; }
        /// <summary>The unique identifier for this project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>The number of Posts read in this project</summary>
        public int? ProjectUsage { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.X.OpenApiClient.Models.Usage"/> and sets the default values.
        /// </summary>
        public Usage()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.Usage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.Usage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.Usage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cap_reset_day", n => { CapResetDay = n.GetIntValue(); } },
                { "daily_client_app_usage", n => { DailyClientAppUsage = n.GetCollectionOfObjectValues<global::Soenneker.X.OpenApiClient.Models.ClientAppUsage>(global::Soenneker.X.OpenApiClient.Models.ClientAppUsage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "daily_project_usage", n => { DailyProjectUsage = n.GetObjectValue<global::Soenneker.X.OpenApiClient.Models.Usage_daily_project_usage>(global::Soenneker.X.OpenApiClient.Models.Usage_daily_project_usage.CreateFromDiscriminatorValue); } },
                { "project_cap", n => { ProjectCap = n.GetIntValue(); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
                { "project_usage", n => { ProjectUsage = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("cap_reset_day", CapResetDay);
            writer.WriteCollectionOfObjectValues<global::Soenneker.X.OpenApiClient.Models.ClientAppUsage>("daily_client_app_usage", DailyClientAppUsage);
            writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.Usage_daily_project_usage>("daily_project_usage", DailyProjectUsage);
            writer.WriteIntValue("project_cap", ProjectCap);
            writer.WriteStringValue("project_id", ProjectId);
            writer.WriteIntValue("project_usage", ProjectUsage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
