// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Get2UsersIdTweetsResponse_meta : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The newest id in this response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NewestId { get; set; }
#nullable restore
#else
        public string NewestId { get; set; }
#endif
        /// <summary>The next token.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NextToken { get; set; }
#nullable restore
#else
        public string NextToken { get; set; }
#endif
        /// <summary>The oldest id in this response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OldestId { get; set; }
#nullable restore
#else
        public string OldestId { get; set; }
#endif
        /// <summary>The previous token.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreviousToken { get; set; }
#nullable restore
#else
        public string PreviousToken { get; set; }
#endif
        /// <summary>The number of results returned in this response.</summary>
        public int? ResultCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.X.OpenApiClient.Models.Get2UsersIdTweetsResponse_meta"/> and sets the default values.
        /// </summary>
        public Get2UsersIdTweetsResponse_meta()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.Get2UsersIdTweetsResponse_meta"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.Get2UsersIdTweetsResponse_meta CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.Get2UsersIdTweetsResponse_meta();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "newest_id", n => { NewestId = n.GetStringValue(); } },
                { "next_token", n => { NextToken = n.GetStringValue(); } },
                { "oldest_id", n => { OldestId = n.GetStringValue(); } },
                { "previous_token", n => { PreviousToken = n.GetStringValue(); } },
                { "result_count", n => { ResultCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("newest_id", NewestId);
            writer.WriteStringValue("next_token", NextToken);
            writer.WriteStringValue("oldest_id", OldestId);
            writer.WriteStringValue("previous_token", PreviousToken);
            writer.WriteIntValue("result_count", ResultCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
