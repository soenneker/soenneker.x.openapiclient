// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Soenneker.X.OpenApiClient.Models.TweetDeleteComplianceSchema"/>, <see cref="global::Soenneker.X.OpenApiClient.Models.TweetDropComplianceSchema"/>, <see cref="global::Soenneker.X.OpenApiClient.Models.TweetEditComplianceSchema"/>, <see cref="global::Soenneker.X.OpenApiClient.Models.TweetUndropComplianceSchema"/>, <see cref="global::Soenneker.X.OpenApiClient.Models.TweetWithheldComplianceSchema"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TweetComplianceData : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Soenneker.X.OpenApiClient.Models.TweetDeleteComplianceSchema"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.TweetDeleteComplianceSchema? TweetDeleteComplianceSchema { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.TweetDeleteComplianceSchema TweetDeleteComplianceSchema { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.X.OpenApiClient.Models.TweetDropComplianceSchema"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.TweetDropComplianceSchema? TweetDropComplianceSchema { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.TweetDropComplianceSchema TweetDropComplianceSchema { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.X.OpenApiClient.Models.TweetEditComplianceSchema"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.TweetEditComplianceSchema? TweetEditComplianceSchema { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.TweetEditComplianceSchema TweetEditComplianceSchema { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.X.OpenApiClient.Models.TweetUndropComplianceSchema"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.TweetUndropComplianceSchema? TweetUndropComplianceSchema { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.TweetUndropComplianceSchema TweetUndropComplianceSchema { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.X.OpenApiClient.Models.TweetWithheldComplianceSchema"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.TweetWithheldComplianceSchema? TweetWithheldComplianceSchema { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.TweetWithheldComplianceSchema TweetWithheldComplianceSchema { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.TweetComplianceData"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.TweetComplianceData CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
            var result = new global::Soenneker.X.OpenApiClient.Models.TweetComplianceData();
            if("TweetDeleteComplianceSchema".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TweetDeleteComplianceSchema = new global::Soenneker.X.OpenApiClient.Models.TweetDeleteComplianceSchema();
            }
            else if("TweetDropComplianceSchema".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TweetDropComplianceSchema = new global::Soenneker.X.OpenApiClient.Models.TweetDropComplianceSchema();
            }
            else if("TweetEditComplianceSchema".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TweetEditComplianceSchema = new global::Soenneker.X.OpenApiClient.Models.TweetEditComplianceSchema();
            }
            else if("TweetUndropComplianceSchema".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TweetUndropComplianceSchema = new global::Soenneker.X.OpenApiClient.Models.TweetUndropComplianceSchema();
            }
            else if("TweetWithheldComplianceSchema".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TweetWithheldComplianceSchema = new global::Soenneker.X.OpenApiClient.Models.TweetWithheldComplianceSchema();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(TweetDeleteComplianceSchema != null)
            {
                return TweetDeleteComplianceSchema.GetFieldDeserializers();
            }
            else if(TweetDropComplianceSchema != null)
            {
                return TweetDropComplianceSchema.GetFieldDeserializers();
            }
            else if(TweetEditComplianceSchema != null)
            {
                return TweetEditComplianceSchema.GetFieldDeserializers();
            }
            else if(TweetUndropComplianceSchema != null)
            {
                return TweetUndropComplianceSchema.GetFieldDeserializers();
            }
            else if(TweetWithheldComplianceSchema != null)
            {
                return TweetWithheldComplianceSchema.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            if(TweetDeleteComplianceSchema != null)
            {
                writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.TweetDeleteComplianceSchema>(null, TweetDeleteComplianceSchema);
            }
            else if(TweetDropComplianceSchema != null)
            {
                writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.TweetDropComplianceSchema>(null, TweetDropComplianceSchema);
            }
            else if(TweetEditComplianceSchema != null)
            {
                writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.TweetEditComplianceSchema>(null, TweetEditComplianceSchema);
            }
            else if(TweetUndropComplianceSchema != null)
            {
                writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.TweetUndropComplianceSchema>(null, TweetUndropComplianceSchema);
            }
            else if(TweetWithheldComplianceSchema != null)
            {
                writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.TweetWithheldComplianceSchema>(null, TweetWithheldComplianceSchema);
            }
        }
    }
}
#pragma warning restore CS0618
