// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    /// <summary>
    /// A list of metrics for this User.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class User_public_metrics : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Number of Users who are following this User.</summary>
        public int? FollowersCount { get; set; }
        /// <summary>Number of Users this User is following.</summary>
        public int? FollowingCount { get; set; }
        /// <summary>The number of likes created by this User.</summary>
        public int? LikeCount { get; set; }
        /// <summary>The number of lists that include this User.</summary>
        public int? ListedCount { get; set; }
        /// <summary>The number of Posts (including Retweets) posted by this User.</summary>
        public int? TweetCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.X.OpenApiClient.Models.User_public_metrics"/> and sets the default values.
        /// </summary>
        public User_public_metrics()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.User_public_metrics"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.User_public_metrics CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.User_public_metrics();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "followers_count", n => { FollowersCount = n.GetIntValue(); } },
                { "following_count", n => { FollowingCount = n.GetIntValue(); } },
                { "like_count", n => { LikeCount = n.GetIntValue(); } },
                { "listed_count", n => { ListedCount = n.GetIntValue(); } },
                { "tweet_count", n => { TweetCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("followers_count", FollowersCount);
            writer.WriteIntValue("following_count", FollowingCount);
            writer.WriteIntValue("like_count", LikeCount);
            writer.WriteIntValue("listed_count", ListedCount);
            writer.WriteIntValue("tweet_count", TweetCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
