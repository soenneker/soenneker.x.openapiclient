// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.X.OpenApiClient.Models
{
    /// <summary>
    /// The X User object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class User : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Metadata about a user&apos;s affiliation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.User_affiliation? Affiliation { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.User_affiliation Affiliation { get; set; }
#endif
        /// <summary>Returns detailed information about the relationship between two users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.X.OpenApiClient.Models.User_connection_status?>? ConnectionStatus { get; set; }
#nullable restore
#else
        public List<global::Soenneker.X.OpenApiClient.Models.User_connection_status?> ConnectionStatus { get; set; }
#endif
        /// <summary>Creation time of this User.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The text of this User&apos;s profile description (also known as bio), if the User provided one.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>A list of metadata found in the User&apos;s profile description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.User_entities? Entities { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.User_entities Entities { get; set; }
#endif
        /// <summary>Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The location specified in the User&apos;s profile, if the User provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Location { get; set; }
#nullable restore
#else
        public string Location { get; set; }
#endif
        /// <summary>Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MostRecentTweetId { get; set; }
#nullable restore
#else
        public string MostRecentTweetId { get; set; }
#endif
        /// <summary>The friendly name of this User, as shown on their profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PinnedTweetId { get; set; }
#nullable restore
#else
        public string PinnedTweetId { get; set; }
#endif
        /// <summary>The URL to the profile banner for this User.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProfileBannerUrl { get; set; }
#nullable restore
#else
        public string ProfileBannerUrl { get; set; }
#endif
        /// <summary>The URL to the profile image for this User.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProfileImageUrl { get; set; }
#nullable restore
#else
        public string ProfileImageUrl { get; set; }
#endif
        /// <summary>Indicates if this User has chosen to protect their Posts (in other words, if this User&apos;s Posts are private).</summary>
        public bool? Protected { get; set; }
        /// <summary>A list of metrics for this User.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.User_public_metrics? PublicMetrics { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.User_public_metrics PublicMetrics { get; set; }
#endif
        /// <summary>Indicates if you can send a DM to this User</summary>
        public bool? ReceivesYourDm { get; set; }
        /// <summary>The X Blue subscription type of the user, eg: Basic, Premium, PremiumPlus or None.</summary>
        public global::Soenneker.X.OpenApiClient.Models.User_subscription_type? SubscriptionType { get; set; }
        /// <summary>The URL specified in the User&apos;s profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The X handle (screen name) of this user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Username { get; set; }
#nullable restore
#else
        public string Username { get; set; }
#endif
        /// <summary>Indicate if this User is a verified X User.</summary>
        public bool? Verified { get; set; }
        /// <summary>The X Blue verified type of the user, eg: blue, government, business or none.</summary>
        public global::Soenneker.X.OpenApiClient.Models.User_verified_type? VerifiedType { get; set; }
        /// <summary>Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.X.OpenApiClient.Models.UserWithheld? Withheld { get; set; }
#nullable restore
#else
        public global::Soenneker.X.OpenApiClient.Models.UserWithheld Withheld { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.X.OpenApiClient.Models.User"/> and sets the default values.
        /// </summary>
        public User()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.X.OpenApiClient.Models.User"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.X.OpenApiClient.Models.User CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.X.OpenApiClient.Models.User();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "affiliation", n => { Affiliation = n.GetObjectValue<global::Soenneker.X.OpenApiClient.Models.User_affiliation>(global::Soenneker.X.OpenApiClient.Models.User_affiliation.CreateFromDiscriminatorValue); } },
                { "connection_status", n => { ConnectionStatus = n.GetCollectionOfEnumValues<global::Soenneker.X.OpenApiClient.Models.User_connection_status>()?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "entities", n => { Entities = n.GetObjectValue<global::Soenneker.X.OpenApiClient.Models.User_entities>(global::Soenneker.X.OpenApiClient.Models.User_entities.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "location", n => { Location = n.GetStringValue(); } },
                { "most_recent_tweet_id", n => { MostRecentTweetId = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "pinned_tweet_id", n => { PinnedTweetId = n.GetStringValue(); } },
                { "profile_banner_url", n => { ProfileBannerUrl = n.GetStringValue(); } },
                { "profile_image_url", n => { ProfileImageUrl = n.GetStringValue(); } },
                { "protected", n => { Protected = n.GetBoolValue(); } },
                { "public_metrics", n => { PublicMetrics = n.GetObjectValue<global::Soenneker.X.OpenApiClient.Models.User_public_metrics>(global::Soenneker.X.OpenApiClient.Models.User_public_metrics.CreateFromDiscriminatorValue); } },
                { "receives_your_dm", n => { ReceivesYourDm = n.GetBoolValue(); } },
                { "subscription_type", n => { SubscriptionType = n.GetEnumValue<global::Soenneker.X.OpenApiClient.Models.User_subscription_type>(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "username", n => { Username = n.GetStringValue(); } },
                { "verified", n => { Verified = n.GetBoolValue(); } },
                { "verified_type", n => { VerifiedType = n.GetEnumValue<global::Soenneker.X.OpenApiClient.Models.User_verified_type>(); } },
                { "withheld", n => { Withheld = n.GetObjectValue<global::Soenneker.X.OpenApiClient.Models.UserWithheld>(global::Soenneker.X.OpenApiClient.Models.UserWithheld.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.User_affiliation>("affiliation", Affiliation);
            writer.WriteCollectionOfEnumValues<global::Soenneker.X.OpenApiClient.Models.User_connection_status>("connection_status", ConnectionStatus);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.User_entities>("entities", Entities);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("location", Location);
            writer.WriteStringValue("most_recent_tweet_id", MostRecentTweetId);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("pinned_tweet_id", PinnedTweetId);
            writer.WriteStringValue("profile_banner_url", ProfileBannerUrl);
            writer.WriteStringValue("profile_image_url", ProfileImageUrl);
            writer.WriteBoolValue("protected", Protected);
            writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.User_public_metrics>("public_metrics", PublicMetrics);
            writer.WriteBoolValue("receives_your_dm", ReceivesYourDm);
            writer.WriteEnumValue<global::Soenneker.X.OpenApiClient.Models.User_subscription_type>("subscription_type", SubscriptionType);
            writer.WriteStringValue("url", Url);
            writer.WriteStringValue("username", Username);
            writer.WriteBoolValue("verified", Verified);
            writer.WriteEnumValue<global::Soenneker.X.OpenApiClient.Models.User_verified_type>("verified_type", VerifiedType);
            writer.WriteObjectValue<global::Soenneker.X.OpenApiClient.Models.UserWithheld>("withheld", Withheld);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
